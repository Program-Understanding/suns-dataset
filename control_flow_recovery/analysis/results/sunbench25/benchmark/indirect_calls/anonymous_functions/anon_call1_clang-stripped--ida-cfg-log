Possible file format: ELF64 for x86-64 (Shared object) (/Applications/IDA Professional 9.1.app/Contents/MacOS/loaders/elf.dylib)

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
    65536     8 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
   851968            total memory allocated

Loading file '/private/var/folders/5k/tmw4lz854sg4496qygvp35r4001vcn/T/tmp.Yl8jwXNj6o/anon_call1_clang-stripped' into database...
Detected file format: ELF64 for x86-64 (Shared object)
Loading processor module /Applications/IDA Professional 9.1.app/Contents/MacOS/procs/pc.dylib for metapc...Initializing processor module metapc...OK
Autoanalysis subsystem has been initialized.
  0. Creating a new segment  (0000000000000000-0000000000000628) ... ... OK
  1. Creating a new segment  (0000000000001000-00000000000011F9) ... ... OK
  2. Creating a new segment  (0000000000002000-0000000000002158) ... ... OK
  3. Creating a new segment  (0000000000003DE0-0000000000004018) ... ... OK
Assuming __fastcall calling convention by default
Type library 'gnulnx_x64' loaded. Applying types...
Types applied to 0 names.
  4. Creating a new segment  (0000000000001000-000000000000101B) ... ... OK
     Deleting segment        (000000000000101B-00000000000011F9) ...
  4. Creating a new segment  (000000000000101B-00000000000011F9) ... ... OK
  5. Creating a new segment  (0000000000001020-0000000000001030) ... ... OK
  6. Creating a new segment  (0000000000001030-00000000000011F9) ... ... OK
  7. Creating a new segment  (0000000000001030-0000000000001038) ... ... OK
     Deleting segment        (0000000000001038-00000000000011F9) ...
  7. Creating a new segment  (0000000000001038-00000000000011F9) ... ... OK
  8. Creating a new segment  (0000000000001040-00000000000011E9) ... ... OK
  9. Creating a new segment  (00000000000011E9-00000000000011F9) ... ... OK
 10. Creating a new segment  (00000000000011EC-00000000000011F9) ... ... OK
 11. Creating a new segment  (0000000000002000-000000000000201C) ... ... OK
     Deleting segment        (000000000000201C-0000000000002158) ...
 11. Creating a new segment  (000000000000201C-0000000000002158) ... ... OK
 12. Creating a new segment  (000000000000201C-0000000000002060) ... ... OK
     Deleting segment        (0000000000002060-0000000000002158) ...
 12. Creating a new segment  (0000000000002060-0000000000002158) ... ... OK
     Deleting segment        (0000000000002060-0000000000002158) ...
 12. Creating a new segment  (0000000000002060-0000000000002158) ... ... OK
 13. Creating a new segment  (0000000000003DE0-0000000000003DE8) ... ... OK
     Deleting segment        (0000000000003DE8-0000000000004018) ...
 13. Creating a new segment  (0000000000003DE8-0000000000004018) ... ... OK
 14. Creating a new segment  (0000000000003DE8-0000000000003DF0) ... ... OK
     Deleting segment        (0000000000003DF0-0000000000004018) ...
 14. Creating a new segment  (0000000000003DF0-0000000000004018) ... ... OK
 15. Creating a new segment  (0000000000003DF0-0000000000003E08) ... ... OK
     Deleting segment        (0000000000003E08-0000000000004018) ...
 15. Creating a new segment  (0000000000003E08-0000000000004018) ... ... OK
 16. Creating a new segment  (0000000000003FB8-0000000000003FE0) ... ... OK
 17. Creating a new segment  (0000000000003FE0-0000000000004018) ... ... OK
 18. Creating a new segment  (0000000000003FE8-0000000000004000) ... ... OK
 19. Creating a new segment  (0000000000004000-0000000000004018) ... ... OK
 20. Creating a new segment  (0000000000004000-0000000000004010) ... ... OK
     Deleting segment        (0000000000004010-0000000000004018) ...
 20. Creating a new segment  (0000000000004010-0000000000004018) ... ... OK
     Deleting segment        (0000000000004010-0000000000004018) ...
 20. Creating a new segment  (0000000000004010-0000000000004018) ... ... OK
 21. Creating a new segment  (0000000000004018-0000000000004040) ... ... OK
Processing relocations...
Marking typical code sequences...
Flushing buffers, please wait...ok
File '/private/var/folders/5k/tmw4lz854sg4496qygvp35r4001vcn/T/tmp.Yl8jwXNj6o/anon_call1_clang-stripped' has been successfully loaded into the database.
Flushing buffers, please wait...ok
Hex-Rays Decompiler plugin has been loaded (v9.1.0.250226)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.

  Please check the Edit/Plugins menu for more information.
Hex-rays version 9.1.0.250226 has been detected, gooMBA plugin ready to use
IDA is analysing the input file...
You may start to explore the input file right now.
Starting
OFFSET: 0x11d5
Propagating type information...
Function argument information has been propagated
The initial autoanalysis has been finished.
Found the offset we care about!
RESULT: 0x1130
RESULT: 0x1140
RESULT: 0x1150
OTHER RESULT? Ordinary_Flow 0x11d5 0x11d8
OTHER RESULT? Code_Near_Call 0x11d5 0x1130
OTHER RESULT? Code_Near_Call 0x11d5 0x1140
OTHER RESULT? Code_Near_Call 0x11d5 0x1150
Done
RESULTS: For question 'What are the file offsets for the instructions that are the targets of the 'call r13' instruction at file offset '0x11d5' ?'
RESULTS: The groundtruth is: {0x1130, 0x1140, 0x1150}
RESULTS: The tool's answer is: {0x1130, 0x1140, 0x1150}
RESULTS: Tool's answer matches groundtruth? YES
RESULTS: SUMMARY: RIGHT
Flushing buffers, please wait...ok
Unloading IDP module /Applications/IDA Professional 9.1.app/Contents/MacOS/procs/pc.dylib...