Possible file format: ELF64 for x86-64 (Shared object) (/Applications/IDA Professional 9.1.app/Contents/MacOS/loaders/elf.dylib)

  bytes   pages size description
--------- ----- ---- --------------------------------------------
   524288    64 8192 allocating memory for b-tree...
    65536     8 8192 allocating memory for virtual array...
   262144    32 8192 allocating memory for name pointers...
-----------------------------------------------------------------
   851968            total memory allocated

Loading file '/private/var/folders/5k/tmw4lz854sg4496qygvp35r4001vcn/T/tmp.HO1oQ2UdHr/hop-stripped' into database...
Detected file format: ELF64 for x86-64 (Shared object)
Loading processor module /Applications/IDA Professional 9.1.app/Contents/MacOS/procs/pc.dylib for metapc...Initializing processor module metapc...OK
Autoanalysis subsystem has been initialized.
  0. Creating a new segment  (0000000000000000-0000000000000738) ... ... OK
  1. Creating a new segment  (0000000000001000-0000000000001A21) ... ... OK
  2. Creating a new segment  (0000000000002000-0000000000002B60) ... ... OK
  3. Creating a new segment  (0000000000003DA0-0000000000004018) ... ... OK
Assuming __fastcall calling convention by default
Type library 'gnulnx_x64' loaded. Applying types...
Types applied to 0 names.
  4. Creating a new segment  (0000000000001000-000000000000101B) ... ... OK
     Deleting segment        (000000000000101B-0000000000001A21) ...
  4. Creating a new segment  (000000000000101B-0000000000001A21) ... ... OK
  5. Creating a new segment  (0000000000001020-0000000000001070) ... ... OK
  6. Creating a new segment  (0000000000001070-0000000000001A21) ... ... OK
  7. Creating a new segment  (0000000000001070-0000000000001080) ... ... OK
     Deleting segment        (0000000000001080-0000000000001A21) ...
  7. Creating a new segment  (0000000000001080-0000000000001A21) ... ... OK
  8. Creating a new segment  (0000000000001080-00000000000010C0) ... ... OK
     Deleting segment        (00000000000010C0-0000000000001A21) ...
  8. Creating a new segment  (00000000000010C0-0000000000001A21) ... ... OK
  9. Creating a new segment  (00000000000010C0-0000000000001A11) ... ... OK
     Deleting segment        (0000000000001A11-0000000000001A21) ...
  9. Creating a new segment  (0000000000001A11-0000000000001A21) ... ... OK
 10. Creating a new segment  (0000000000001A14-0000000000001A21) ... ... OK
 11. Creating a new segment  (0000000000002000-0000000000002A18) ... ... OK
     Deleting segment        (0000000000002A18-0000000000002B60) ...
 11. Creating a new segment  (0000000000002A18-0000000000002B60) ... ... OK
 12. Creating a new segment  (0000000000002A18-0000000000002A54) ... ... OK
     Deleting segment        (0000000000002A54-0000000000002B60) ...
 12. Creating a new segment  (0000000000002A54-0000000000002B60) ... ... OK
 13. Creating a new segment  (0000000000002A58-0000000000002B60) ... ... OK
 14. Creating a new segment  (0000000000003DA0-0000000000003DA8) ... ... OK
     Deleting segment        (0000000000003DA8-0000000000004018) ...
 14. Creating a new segment  (0000000000003DA8-0000000000004018) ... ... OK
 15. Creating a new segment  (0000000000003DA8-0000000000003DB0) ... ... OK
     Deleting segment        (0000000000003DB0-0000000000004018) ...
 15. Creating a new segment  (0000000000003DB0-0000000000004018) ... ... OK
 16. Creating a new segment  (0000000000003FA0-0000000000004000) ... ... OK
 17. Creating a new segment  (0000000000004000-0000000000004018) ... ... OK
 18. Creating a new segment  (0000000000004000-0000000000004010) ... ... OK
     Deleting segment        (0000000000004010-0000000000004018) ...
 18. Creating a new segment  (0000000000004010-0000000000004018) ... ... OK
     Deleting segment        (0000000000004010-0000000000004018) ...
 18. Creating a new segment  (0000000000004010-0000000000004018) ... ... OK
 19. Creating a new segment  (0000000000004018-0000000000004060) ... ... OK
Processing relocations...
Marking typical code sequences...
Flushing buffers, please wait...ok
File '/private/var/folders/5k/tmw4lz854sg4496qygvp35r4001vcn/T/tmp.HO1oQ2UdHr/hop-stripped' has been successfully loaded into the database.
Flushing buffers, please wait...ok
Hex-Rays Decompiler plugin has been loaded (v9.1.0.250226)
  The hotkeys are F5: decompile, Ctrl-F5: decompile all.

  Please check the Edit/Plugins menu for more information.
Hex-rays version 9.1.0.250226 has been detected, gooMBA plugin ready to use
IDA is analysing the input file...
You may start to explore the input file right now.
Starting
OFFSET: 0x110a
Propagating type information...
Function argument information has been propagated
The initial autoanalysis has been finished.
Found the offset we care about!
RESULT: 0x110d
RESULT: 0x113d
RESULT: 0x116d
RESULT: 0x1193
RESULT: 0x11a4
RESULT: 0x11f5
RESULT: 0x1224
RESULT: 0x124d
RESULT: 0x126a
RESULT: 0x12a6
RESULT: 0x12d4
RESULT: 0x1311
RESULT: 0x133a
RESULT: 0x1363
RESULT: 0x138c
RESULT: 0x13b4
RESULT: 0x13dd
RESULT: 0x13fa
OTHER RESULT? Code_Near_Jump 0x110a 0x110d
OTHER RESULT? Code_Near_Jump 0x110a 0x113d
OTHER RESULT? Code_Near_Jump 0x110a 0x116d
OTHER RESULT? Code_Near_Jump 0x110a 0x1193
OTHER RESULT? Code_Near_Jump 0x110a 0x11a4
OTHER RESULT? Code_Near_Jump 0x110a 0x11f5
OTHER RESULT? Code_Near_Jump 0x110a 0x1224
OTHER RESULT? Code_Near_Jump 0x110a 0x124d
OTHER RESULT? Code_Near_Jump 0x110a 0x126a
OTHER RESULT? Code_Near_Jump 0x110a 0x12a6
OTHER RESULT? Code_Near_Jump 0x110a 0x12d4
OTHER RESULT? Code_Near_Jump 0x110a 0x1311
OTHER RESULT? Code_Near_Jump 0x110a 0x133a
OTHER RESULT? Code_Near_Jump 0x110a 0x1363
OTHER RESULT? Code_Near_Jump 0x110a 0x138c
OTHER RESULT? Code_Near_Jump 0x110a 0x13b4
OTHER RESULT? Code_Near_Jump 0x110a 0x13dd
OTHER RESULT? Code_Near_Jump 0x110a 0x13fa
Done
RESULTS: For question 'What are the file offsets for the instructions that are the targets of the 'something' instruction at file offset '0x110a' ?'
RESULTS: The groundtruth is: {0x113d, 0x116d, 0x1193, 0x11a4, 0x11f5, 0x124d, 0x126a, 0x12a6, 0x12d4, 0x1311, 0x133a, 0x1363, 0x138c, 0x13b4, 0x13dd, 0x13fa}
RESULTS: The tool's answer is: {0x110d, 0x113d, 0x116d, 0x1193, 0x11a4, 0x11f5, 0x1224, 0x124d, 0x126a, 0x12a6, 0x12d4, 0x1311, 0x133a, 0x1363, 0x138c, 0x13b4, 0x13dd, 0x13fa}
RESULTS: Tool's answer matches groundtruth? NO
Tool's answer includes falsePositive elements: {'0x110d', '0x1224'}
Tool's answer does not include correct elements: {}
RESULTS: SUMMARY: OVER+2
Flushing buffers, please wait...ok
Unloading IDP module /Applications/IDA Professional 9.1.app/Contents/MacOS/procs/pc.dylib...