digraph G {
node[shape=rectangle,style=filled,fillcolor=lightsteelblue,color=lightsteelblue]
bgcolor="transparent"
graph [label="Jakstab v0.8.4-devel   Sun Feb 02 11:40:06 CST 2025\n-m tests/jumptable.exe --cpa ocbfikrsvx --cpa2 ikrsvx", labelloc=t, fontsize=35, pad=30]"0x0040109f_0"[label="0x0040109f_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x00401000_1"[label="0x00401000_1\nI: {fs=FS:0[0], esp=Stack:0[-8]} Mem: Stack: [-4=0[-18415616],] SData = intact\n"];
"0x00401000_0"[label="0x00401000_0\nI: {fs=FS:0[0], esp=Stack:0[-4]} Mem: Stack: [-4=0[-18415616],] SData = intact\n"];
"0x0040101b_0"[label="0x0040101b_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-128;127]} Mem: Stack: [-16=1[-128;127],-4=0[-18415616],] SData = intact\n"];
"0x0040109f_1"[label="0x0040109f_1\nI: {fs=FS:0[0], esp=Stack:0[-8]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x0040109d_0"[label="0x0040109d_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x0040105d_0"[label="0x0040105d_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-12=0[2],-4=0[-18415616],] SData = intact\n"];
"0x00401076_3"[label="0x00401076_3\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x0040100f_0"[label="0x0040100f_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-4=0[-18415616],] SData = intact\n"];
"0x00401051_0"[label="0x00401051_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x0040102e_0"[label="0x0040102e_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x0040106e_0"[label="0x0040106e_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401009_0"[label="0x00401009_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-4=0[-18415616],] SData = intact\n"];
"0x00401049_0"[label="0x00401049_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-1;0], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-1;0], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-1;0], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401024_0"[label="0x00401024_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-128;127]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401085_0"[label="0x00401085_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401041_0"[label="0x00401041_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401001_0"[label="0x00401001_0\nI: {fs=FS:0[0], esp=Stack:0[-8]} Mem: Stack: [-4=0[-18415616],] SData = intact\n"];
"0x004010a0_0"[label="0x004010a0_0\nI: {fs=FS:0[0], esp=Stack:0[-4]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x00401022_0"[label="0x00401022_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-128;127]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x004010a0_1"[label="0x004010a0_1\nI: {fs=FS:0[0], esp=Stack:0[-4], retaddr=0[-18415616]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x00401062_1"[label="0x00401062_1\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x0040103b_0"[label="0x0040103b_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x004010a0_2"[label="0x004010a0_2\nI: {fs=FS:0[0], esp=Stack:0[0], retaddr=0[-18415616]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x0040107f_1"[label="0x0040107f_1\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x0040109a_1"[label="0x0040109a_1\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x00401054_0"[label="0x00401054_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401056_0"[label="0x00401056_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401012_0"[label="0x00401012_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-128;127]} Mem: Stack: [-4=0[-18415616],] SData = intact\n"];
"0xface0000_1"[label="0xface0000_1\nI: {} Mem: SData = intact\n",fillcolor="lightgrey",color="green",style="filled,bold"];
"0xface0000_4"[label="0xface0000_4\nI: {fs=FS:0[0], esp=Stack:0[-4]} Mem: SData = intact\n",fillcolor="lightgrey",color="lightgrey"];
"0x0040106b_0"[label="0x0040106b_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0xface0000_5"[label="0xface0000_5\nI: {fs=FS:0[0], esp=Stack:0[-4]} Mem: Stack: [-4=0[-18415616],] SData = intact\n",fillcolor="lightgrey",color="lightgrey"];
"0xface0000_2"[label="0xface0000_2\nI: {esp=Stack:0[0]} Mem: SData = intact\n",fillcolor="lightgrey",color="lightgrey"];
"0xface0000_3"[label="0xface0000_3\nI: {fs=FS:0[0], esp=Stack:0[0]} Mem: SData = intact\n",fillcolor="lightgrey",color="lightgrey"];
"0x0040100c_0"[label="0x0040100c_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-4=0[-18415616],] SData = intact\n"];
"0x0040104e_1"[label="0x0040104e_1\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[0;6], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x00401088_0"[label="0x00401088_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x0040108a_0"[label="0x0040108a_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-128;127]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n"];
"0x00401027_0"[label="0x00401027_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-128;127], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0xfee70000_0"[label="0xfee70000_0\nI: {fs=FS:0[0], esp=Stack:0[0], retaddr=0[-18415616]} Mem: Stack: [-16=1[-181;74],-4=0[-18415616],] SData = intact\n",fillcolor="lightgrey",color="orange",style="filled,bold"];
"0x00401046_0"[label="0x00401046_0\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-1;0], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-1;0], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\nI: {fs=FS:0[0], ebp=Stack:0[-8], esp=Stack:0[-8], edx=1[-1;0], ecx=1[0;69]} Mem: Stack: [-16=1[0;69],-4=0[-18415616],] SData = intact\n"];
"0x004010a0_2" -> "0xfee70000_0" [color="#000000",label="assume (retaddr == -18415616)"];
"0xface0000_1" -> "0xface0000_2" [color="#000000",label="esp := alloc()"];
"0x004010a0_1" -> "0x004010a0_2" [color="#000000",label="esp := (esp + 4)"];
"0x0040106e_0" -> "0x0040109a_1" [color="#000000",label="assume true"];
"0x0040103b_0" -> "0x00401041_0" [color="#000000",label="mem32[(ebp + -4)] := (mem32[(ebp + -4)] + 5)"];
"0x0040101b_0" -> "0x00401022_0" [color="#000000",label="mem32[(ebp + -8)] := (mem32[(ebp + -8)] + -53)"];
"0x00401088_0" -> "0x0040109a_1" [color="#000000",label="assume true"];
"0x0040107f_1" -> "0x00401085_0" [color="#000000",label="ecx := (mem32[(ebp + -4)] * mem32[(ebp + -4)])@[0:31]"];
"0x0040102e_0" -> "0x0040103b_0" [color="#000000",label="assume (mem32[((zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)]) * 4)@[0:31] + 4198564)] == 4198453)"];
"0xface0000_3" -> "0xface0000_4" [color="#000000",label="esp := (esp + -4)"];
"0x0040109d_0" -> "0x0040109f_0" [color="#000000",label="esp := ebp"];
"0x00401022_0" -> "0x0040108a_0" [color="#000000",label="assume (! (mem32[(ebp + -8)] u<= 69))"];
"0x00401027_0" -> "0x0040102e_0" [color="#000000",label="edx := zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)])"];
"0x00401046_0" -> "0x00401049_0" [color="#000000",label="mem32[(ebp + -4)] := ((mem32[(ebp + -4)] + (- (mem32[(ebp + -4)]@[31] ? -1 : 0))) >> 1)"];
"0x0040100c_0" -> "0x0040100f_0" [color="#000000",label="ecx := mem32[(ebp + 16)]"];
"0x0040109f_1" -> "0x004010a0_0" [color="#000000",label="esp := (esp + 4)"];
"0x00401009_0" -> "0x0040100c_0" [color="#000000",label="mem32[(ebp + -4)] := mem32[(ebp + 20)]"];
"0x0040108a_0" -> "0x0040109a_1" [color="#000000",label="mem32[(ebp + -4)] := -1"];
"0x00401000_0" -> "0x00401000_1" [color="#000000",label="esp := (esp + -4)"];
"0x00401000_1" -> "0x00401001_0" [color="#000000",label="mem32[esp] := ebp"];
"0x0040102e_0" -> "0x00401041_0" [color="#000000",label="assume (mem32[((zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)]) * 4)@[0:31] + 4198564)] == 4198462)"];
"0xface0000_2" -> "0xface0000_3" [color="#000000",label="fs := alloc()"];
"0x0040106b_0" -> "0x0040106e_0" [color="#000000",label="mem32[(ebp + -4)] := (487 + (- (mem32[(ebp + -4)] << 1)))"];
"0x00401022_0" -> "0x00401024_0" [color="#000000",label="assume (mem32[(ebp + -8)] u<= 69)"];
"0x00401054_0" -> "0x0040109a_1" [color="#000000",label="assume true"];
"0x0040104e_1" -> "0x00401051_0" [color="#000000",label="ecx := (mem32[(ebp + -4)] * 5)@[0:31]"];
"0x0040100f_0" -> "0x00401012_0" [color="#000000",label="edx := sign_extend(8, 31, mem8[mem32[(ebp + 16)]])"];
"0x0040102e_0" -> "0x00401076_3" [color="#000000",label="assume (mem32[((zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)]) * 4)@[0:31] + 4198564)] == 4198512)"];
"0x0040102e_0" -> "0x00401056_0" [color="#000000",label="assume (mem32[((zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)]) * 4)@[0:31] + 4198564)] == 4198486)"];
"0x0040109a_1" -> "0x0040109d_0" [color="#000000",label="eax := ((mem32[(ebp + -4)] * 622)@[0:31] + -3)"];
"0xface0000_4" -> "0xface0000_5" [color="#000000",label="mem32[esp] := -18415616"];
"0xface0000_5" -> "0x00401000_0" [color="#000000",label="assume true"];
"0x0040102e_0" -> "0x00401062_1" [color="#000000",label="assume (mem32[((zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)]) * 4)@[0:31] + 4198564)] == 4198495)"];
"0x00401062_1" -> "0x0040106b_0" [color="#000000",label="edx := (mem32[(ebp + -4)] << 1)"];
"0x00401056_0" -> "0x0040105d_0" [color="#000000",label="mem32[(ebp + -4)] := 2"];
"0x004010a0_0" -> "0x004010a0_1" [color="#000000",label="retaddr := mem32[esp]"];
"0x00401051_0" -> "0x00401054_0" [color="#000000",label="mem32[(ebp + -4)] := (mem32[(ebp + -4)] * 5)@[0:31]"];
"0x00401012_0" -> "0x0040101b_0" [color="#000000",label="mem32[(ebp + -8)] := sign_extend(8, 31, mem8[mem32[(ebp + 16)]])"];
"0x00401001_0" -> "0x00401009_0" [color="#000000",label="ebp := esp"];
"0x00401049_0" -> "0x0040109a_1" [color="#000000",label="assume true"];
"0x0040109f_0" -> "0x0040109f_1" [color="#000000",label="ebp := mem32[ebp]"];
"0x0040105d_0" -> "0x0040109a_1" [color="#000000",label="assume true"];
"0x0040102e_0" -> "0x0040108a_0" [color="#000000",label="assume (mem32[((zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)]) * 4)@[0:31] + 4198564)] == 4198538)"];
"0x00401041_0" -> "0x00401046_0" [color="#000000",label="edx := (mem32[(ebp + -4)]@[31] ? -1 : 0)"];
"0x00401076_3" -> "0x0040107f_1" [color="#000000",label="edx := (213 MOD mem32[(ebp + -4)])"];
"0x0040102e_0" -> "0x0040104e_1" [color="#000000",label="assume (mem32[((zero_fill(8, 31, mem8[(mem32[(ebp + -8)] + 4198592)]) * 4)@[0:31] + 4198564)] == 4198475)"];
"0x00401024_0" -> "0x00401027_0" [color="#000000",label="ecx := mem32[(ebp + -8)]"];
"0x00401085_0" -> "0x00401088_0" [color="#000000",label="mem32[(ebp + -4)] := ((- (mem32[(ebp + -4)] * mem32[(ebp + -4)])@[0:31]) + (213 DIV mem32[(ebp + -4)]) + 22)"];
}
