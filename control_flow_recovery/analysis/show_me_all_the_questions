#! /bin/bash
#collect the tool questions for each tool

#convenient global
global_questions=()
global_tools=()
global_total=0

function get_questions_for_tool() {
    #these special keywords can appear in questions, e.g., $INSTRUCTION or $OFFSET
    local INSTRUCTION="(.*)"
    local OFFSET="(0[xX][0-9a-fA-F]+|[0-9]+)"
    # Use jq to extract the questions and read them into the array

    local json_data=$(<$1/questions.json)
    # Initialize an empty array
    local questions=()

    # Use jq to extract the questions and read them into the array
    while IFS= read -r question; do
	questions+=("$question")
    done < <(echo "$json_data" | jq -r '.questions[].question')

    for question in "${questions[@]}"; do
	local transformed_question="${question//\$INSTRUCTION/$INSTRUCTION}"
	local transformed_question="${transformed_question//\$OFFSET/$OFFSET}"
	echo "$transformed_question"
	global_questions+=("$transformed_question")
	global_tools+=("$tool")
	((global_total++))
    done
}

function find_tools() {
    for tooldir in ./tools/*; do
        if [ -d "$tooldir" ]; then
            tool="${tooldir##*/}"
            get_questions_for_tool "$tooldir" "$tool"
        fi
    done
}

function find_cfr() {
    find .. -type d | while read -r dir; do

	if [ "$dir" == "../analysis" ]; then
	    continue #skip the analysis directory
	fi

	if [[ "$dir" == ../analysis/* ]]; then
	    continue #skip all of the subdirectories in analysis
	fi

	#echo "processing directory: $dir"
	cfr_json_files=$(find "$dir" -maxdepth 1 -type f -name "*cfr.json")
	#echo "Here are the json files: $cfr_json_files"

	if [ -n "$cfr_json_files" ]; then
	    # Split the variable into an array using newline as the delimiter
	    IFS=$'\n' read -r -d '' -a cfr_json_file_array <<< "$cfr_json_files"

	    for cfr_json_file in "${cfr_json_file_array[@]}"; do
		# Fetching question from the JSON file
		cfr_question=$(jq -r '.question' "$cfr_json_file")
		echo "$cfr_question"
		echo "     in $(basename "$cfr_json_file") from: $(dirname "$cfr_json_file")"
		local tool_count=0
		for (( i=0; i<$global_total; i++ )); do
		    question=${global_questions[i]}
		    tool=${global_tools[i]}

		    if [[ $cfr_question =~ $question ]]; then
			echo "     will be processed by tool $tool"
			(( tool_count++ ))
		    fi
		    
		    #echo "time to check question $question for tool $tool"
		done

		if [ $tool_count -eq 0 ]; then
		    echo "     **** NO TOOL RECOGNIZES THIS QUESTION"
		fi
		
	    done
	fi
    done
}

#EXECUTION BEGINS HERE
find_tools
find_cfr
