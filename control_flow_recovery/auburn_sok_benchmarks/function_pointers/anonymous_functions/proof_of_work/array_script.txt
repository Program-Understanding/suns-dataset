Script started on 2025-04-07 20:50:17-05:00 [TERM="xterm-256color" TTY="/dev/pts/2" COLUMNS="105" LINES="24"]
;thestair@thestair-VMware-Virtual-Platform: ~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[01;32mthestair@thestair-VMware-Virtual-Platform[00m:[01;34m~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[00m$ /bin/python3 /home/thestair/.vscode/extensions/ms-python.python-2025.2.0-linux-x64/python_files/printEnvVariablesToFile.py /home/thestair/.vscode/extensions/ms-python.python-2025.2.0-linux-x64/python_files/deactivate/bash/envVars.txt[A[A[K


gdb a.out

[35;1mGNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git[m
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <[32mhttp://gnu.org/licenses/gpl.html[m>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
[32m<https://www.gnu.org/software/gdb/bugs/>[m.
Find the GDB manual and other documentation resources online at:
    <[32mhttp://www.gnu.org/software/gdb/documentation/[m>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
[32mGEF[0m for linux ready, type `[4m[33mgef[24m[0m' to start, `[4m[35mgef config[24m[0m' to configure
[1m[32m93[0m commands loaded and [1m[34m5[0m functions added for GDB [1m[33m15.0.50.20240403-git[0m in 0.00ms using Python engine [1m[31m3.12[0m
Reading symbols from [32ma.out[m...

This GDB supports auto-downloading debuginfo from the following URLs:
  <[32mhttps://debuginfod.ubuntu.com[m>
Debuginfod has been disabled.
To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit.
(No debugging symbols found in [32ma.out[m)
[1;31mgef➤  [0mdisassemble main

Dump of assembler code for function [33mmain[m:
   [34m0x0000000000001060[m <+0>:	[32mendbr64[m
   [34m0x0000000000001064[m <+4>:	[32mpush   [m[31mr14[m
   [34m0x0000000000001066[m <+6>:	[32mlea    [m[31mrdx[m,[[31mrip[m+[34m0x1b3[m][37;2m        # [m[37;2m0x1220 <target1>[m
   [34m0x000000000000106d[m <+13>:	[32msub    [m[31medi[m,[34m0x1[m
   [34m0x0000000000001070[m <+16>:	[32mpush   [m[31mr13[m
   [34m0x0000000000001072[m <+18>:	[32mmovq   [m[31mxmm0[m,[31mrdx[m
   [34m0x0000000000001077[m <+23>:	[32mpush   [m[31mr12[m
   [34m0x0000000000001079[m <+25>:	[32mpush   [m[31mrbp[m
   [34m0x000000000000107a[m <+26>:	[32mpush   [m[31mrbx[m
   [34m0x000000000000107b[m <+27>:	[32msub    [m[31mrsp[m,[34m0x20[m
   [34m0x000000000000107f[m <+31>:	[32mmov    [m[31mrax[m,QWORD PTR [31mfs[m:0x28
   [34m0x0000000000001088[m <+40>:	[32mmov    [mQWORD PTR [[31mrsp[m+[34m0x18[m],[31mrax[m
   [34m0x000000000000108d[m <+45>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0x19c[m][37;2m        # [m[37;2m0x1230 <target2>[m
   [34m0x0000000000001094[m <+52>:	[32mmovq   [m[31mxmm1[m,[31mrax[m
   [34m0x0000000000001099[m <+57>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0x1a0[m][37;2m        # [m[37;2m0x1240 <target3>[m
   [34m0x00000000000010a0[m <+64>:	[32mpunpcklqdq [m[31mxmm0[m,[31mxmm1[m
   [34m0x00000000000010a4[m <+68>:	[32mmov    [mQWORD PTR [[31mrsp[m+[34m0x10[m],[31mrax[m
   [34m0x00000000000010a9[m <+73>:	[32mmovaps [mXMMWORD PTR [[31mrsp[m],[31mxmm0[m
   [34m0x00000000000010ad[m <+77>:	[32mcmp    [m[31medi[m,[34m0x2[m
   [34m0x00000000000010b0[m <+80>:	[32mja     [m[34m0x111d[m <[33mmain[m+189>
   [34m0x00000000000010b2[m <+82>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0xf5f[m][37;2m        # [m[37;2m0x2018 <CSWTCH.7>[m
   [34m0x00000000000010b9[m <+89>:	[32mmov    [m[31mr13d[m,DWORD PTR [[31mrax[m+[31mrdi[m*[34m4[m]
   [34m0x00000000000010bd[m <+93>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0xf44[m][37;2m        # [m[37;2m0x2008 <CSWTCH.8>[m
   [34m0x00000000000010c4[m <+100>:	[32mmov    [m[31mr12d[m,DWORD PTR [[31mrax[m+[31mrdi[m*[34m4[m]
   [34m0x00000000000010c8[m <+104>:	[32mmov    [m[31mebp[m,[31mr13d[m
   [34m0x00000000000010cb[m <+107>:	[32mxor    [m[31mebx[m,[31mebx[m
   [34m0x00000000000010cd[m <+109>:	[32mlea    [m[31mr14[m,[[31mrip[m+[34m0x16c[m][37;2m        # [m[37;2m0x1240 <target3>[m
   [34m0x00000000000010d4[m <+116>:	[32mor     [m[31mebp[m,[31mr12d[m
   [34m0x00000000000010d7[m <+119>:	[32mand    [m[31mebp[m,[34m0x1[m
   [34m0x00000000000010da[m <+122>:	[32mmov    [m[31mrax[m,[31mr14[m
   [34m0x00000000000010dd[m <+125>:	[32mtest   [m[31mebp[m,[31mebp[m
   [34m0x00000000000010df[m <+127>:	[32mje     [m[34m0x1110[m <[33mmain[m+176>
   [34m0x00000000000010e1[m <+129>:	[32madd    [m[31mebx[m,[34m0x1[m
   [34m0x00000000000010e4[m <+132>:	[32mmov    [m[31mesi[m,[31mr12d[m
   [34m0x00000000000010e7[m <+135>:	[32mmov    [m[31medi[m,[31mr13d[m
   [34m0x00000000000010ea[m <+138>:	[32mcall   [m[31mrax[m
   [34m0x00000000000010ec[m <+140>:	[32mcmp    [m[31mebx[m,[34m0x3[m
   [34m0x00000000000010ef[m <+143>:	[32mjne    [m[34m0x10da[m <[33mmain[m+122>
   [34m0x00000000000010f1[m <+145>:	[32mmov    [m[31mrax[m,QWORD PTR [[31mrsp[m+[34m0x18[m]
   [34m0x00000000000010f6[m <+150>:	[32msub    [m[31mrax[m,QWORD PTR [31mfs[m:0x28
   [34m0x00000000000010ff[m <+159>:	[32mjne    [m[34m0x1125[m <[33mmain[m+197>
   [34m0x0000000000001101[m <+161>:	[32madd    [m[31mrsp[m,[34m0x20[m
   [34m0x0000000000001105[m <+165>:	[32mxor    [m[31meax[m,[31meax[m
   [34m0x0000000000001107[m <+167>:	[32mpop    [m[31mrbx[m
   [34m0x0000000000001108[m <+168>:	[32mpop    [m[31mrbp[m
   [34m0x0000000000001109[m <+169>:	[32mpop    [m[31mr12[m
   [34m0x000000000000110b[m <+171>:	[32mpop    [m[31mr13[m
   [34m0x000000000000110d[m <+173>:	[32mpop    [m[31mr14[m
   [34m0x000000000000110f[m <+175>:	[32mret[m
   [34m0x0000000000001110[m <+176>:	[32mlea    [m[31mrax[m,[[31mrbx[m+[31mrbx[m*[34m1[m]
   [34m0x0000000000001114[m <+180>:	[32mand    [m[31meax[m,[34m0x2[m
   [34m0x0000000000001117[m <+183>:	[32mmov    [m[31mrax[m,QWORD PTR [[31mrsp[m+[31mrax[m*[34m8[m]
   [34m0x000000000000111b[m <+187>:	[32mjmp    [m[34m0x10e1[m <[33mmain[m+129>
   [34m0x000000000000111d[m <+189>:	[32mxor    [m[31mr12d[m,[31mr12d[m
   [34m0x0000000000001120[m <+192>:	[32mxor    [m[31mr13d[m,[31mr13d[m
   [34m0x0000000000001123[m <+195>:	[32mjmp    [m[34m0x10c8[m <[33mmain[m+104>
   [34m0x0000000000001125[m <+197>:	[32mcall   [m[34m0x1050[m <[33m__stack_chk_fail@plt[m>
End of assembler dump.
[1;31mgef➤  [0mset args 1

[1;31mgef➤  [0mset args 1
[C[C[C[C[C[Cdisassemble main
[C[C[C[C[C[C[6Pset args 1
[C[C[C[C[C[C[Kbreak *[7m0x00000000000010ea[27m
0x00000000000010ea

Breakpoint 1 at [34m0x10ea[m
[1;31mgef➤  [0mrun

Starting program: [32m/home/thestair/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src/a.out[m 1
Warning:
Cannot insert breakpoint 1.
Cannot access memory at address 0x10ea

[1;32mgef➤  [0mdisassemble main

Dump of assembler code for function [33mmain[m:
   [34m0x0000555555555060[m <+0>:	[32mendbr64[m
   [34m0x0000555555555064[m <+4>:	[32mpush   [m[31mr14[m
   [34m0x0000555555555066[m <+6>:	[32mlea    [m[31mrdx[m,[[31mrip[m+[34m0x1b3[m][37;2m        # [m[37;2m0x555555555220 <target1>[m
   [34m0x000055555555506d[m <+13>:	[32msub    [m[31medi[m,[34m0x1[m
   [34m0x0000555555555070[m <+16>:	[32mpush   [m[31mr13[m
   [34m0x0000555555555072[m <+18>:	[32mmovq   [m[31mxmm0[m,[31mrdx[m
   [34m0x0000555555555077[m <+23>:	[32mpush   [m[31mr12[m
   [34m0x0000555555555079[m <+25>:	[32mpush   [m[31mrbp[m
   [34m0x000055555555507a[m <+26>:	[32mpush   [m[31mrbx[m
   [34m0x000055555555507b[m <+27>:	[32msub    [m[31mrsp[m,[34m0x20[m
   [34m0x000055555555507f[m <+31>:	[32mmov    [m[31mrax[m,QWORD PTR [31mfs[m:0x28
   [34m0x0000555555555088[m <+40>:	[32mmov    [mQWORD PTR [[31mrsp[m+[34m0x18[m],[31mrax[m
   [34m0x000055555555508d[m <+45>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0x19c[m][37;2m        # [m[37;2m0x555555555230 <target2>[m
   [34m0x0000555555555094[m <+52>:	[32mmovq   [m[31mxmm1[m,[31mrax[m
   [34m0x0000555555555099[m <+57>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0x1a0[m][37;2m        # [m[37;2m0x555555555240 <target3>[m
   [34m0x00005555555550a0[m <+64>:	[32mpunpcklqdq [m[31mxmm0[m,[31mxmm1[m
   [34m0x00005555555550a4[m <+68>:	[32mmov    [mQWORD PTR [[31mrsp[m+[34m0x10[m],[31mrax[m
   [34m0x00005555555550a9[m <+73>:	[32mmovaps [mXMMWORD PTR [[31mrsp[m],[31mxmm0[m
   [34m0x00005555555550ad[m <+77>:	[32mcmp    [m[31medi[m,[34m0x2[m
   [34m0x00005555555550b0[m <+80>:	[32mja     [m[34m0x55555555511d[m <[33mmain[m+189>
   [34m0x00005555555550b2[m <+82>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0xf5f[m][37;2m        # [m[37;2m0x555555556018 <CSWTCH.7>[m
   [34m0x00005555555550b9[m <+89>:	[32mmov    [m[31mr13d[m,DWORD PTR [[31mrax[m+[31mrdi[m*[34m4[m]
   [34m0x00005555555550bd[m <+93>:	[32mlea    [m[31mrax[m,[[31mrip[m+[34m0xf44[m][37;2m        # [m[37;2m0x555555556008 <CSWTCH.8>[m
   [34m0x00005555555550c4[m <+100>:	[32mmov    [m[31mr12d[m,DWORD PTR [[31mrax[m+[31mrdi[m*[34m4[m]
   [34m0x00005555555550c8[m <+104>:	[32mmov    [m[31mebp[m,[31mr13d[m
   [34m0x00005555555550cb[m <+107>:	[32mxor    [m[31mebx[m,[31mebx[m
   [34m0x00005555555550cd[m <+109>:	[32mlea    [m[31mr14[m,[[31mrip[m+[34m0x16c[m][37;2m        # [m[37;2m0x555555555240 <target3>[m
   [34m0x00005555555550d4[m <+116>:	[32mor     [m[31mebp[m,[31mr12d[m
   [34m0x00005555555550d7[m <+119>:	[32mand    [m[31mebp[m,[34m0x1[m
   [34m0x00005555555550da[m <+122>:	[32mmov    [m[31mrax[m,[31mr14[m
   [34m0x00005555555550dd[m <+125>:	[32mtest   [m[31mebp[m,[31mebp[m
   [34m0x00005555555550df[m <+127>:	[32mje     [m[34m0x555555555110[m <[33mmain[m+176>
   [34m0x00005555555550e1[m <+129>:	[32madd    [m[31mebx[m,[34m0x1[m
   [34m0x00005555555550e4[m <+132>:	[32mmov    [m[31mesi[m,[31mr12d[m
   [34m0x00005555555550e7[m <+135>:	[32mmov    [m[31medi[m,[31mr13d[m
   [34m0x00005555555550ea[m <+138>:	[32mcall   [m[31mrax[m
   [34m0x00005555555550ec[m <+140>:	[32mcmp    [m[31mebx[m,[34m0x3[m
   [34m0x00005555555550ef[m <+143>:	[32mjne    [m[34m0x5555555550da[m <[33mmain[m+122>
   [34m0x00005555555550f1[m <+145>:	[32mmov    [m[31mrax[m,QWORD PTR [[31mrsp[m+[34m0x18[m]
   [34m0x00005555555550f6[m <+150>:	[32msub    [m[31mrax[m,QWORD PTR [31mfs[m:0x28
   [34m0x00005555555550ff[m <+159>:	[32mjne    [m[34m0x555555555125[m <[33mmain[m+197>
   [34m0x0000555555555101[m <+161>:	[32madd    [m[31mrsp[m,[34m0x20[m
   [34m0x0000555555555105[m <+165>:	[32mxor    [m[31meax[m,[31meax[m
   [34m0x0000555555555107[m <+167>:	[32mpop    [m[31mrbx[m
   [34m0x0000555555555108[m <+168>:	[32mpop    [m[31mrbp[m
   [34m0x0000555555555109[m <+169>:	[32mpop    [m[31mr12[m
   [34m0x000055555555510b[m <+171>:	[32mpop    [m[31mr13[m
   [34m0x000055555555510d[m <+173>:	[32mpop    [m[31mr14[m
   [34m0x000055555555510f[m <+175>:	[32mret[m
   [34m0x0000555555555110[m <+176>:	[32mlea    [m[31mrax[m,[[31mrbx[m+[31mrbx[m*[34m1[m]
   [34m0x0000555555555114[m <+180>:	[32mand    [m[31meax[m,[34m0x2[m
   [34m0x0000555555555117[m <+183>:	[32mmov    [m[31mrax[m,QWORD PTR [[31mrsp[m+[31mrax[m*[34m8[m]
   [34m0x000055555555511b[m <+187>:	[32mjmp    [m[34m0x5555555550e1[m <[33mmain[m+129>
   [34m0x000055555555511d[m <+189>:	[32mxor    [m[31mr12d[m,[31mr12d[m
   [34m0x0000555555555120[m <+192>:	[32mxor    [m[31mr13d[m,[31mr13d[m
   [34m0x0000555555555123[m <+195>:	[32mjmp    [m[34m0x5555555550c8[m <[33mmain[m+104>
   [34m0x0000555555555125[m <+197>:	[32mcall   [m[34m0x555555555050[m <[33m__stack_chk_fail@plt[m>
End of assembler dump.
[1;32mgef➤  [0mbreak *[7m0x00005555555550ea[27m
0x00005555555550ea

Breakpoint 2 at [34m0x5555555550ea[m
Warning:
Cannot insert breakpoint 1.
Cannot access memory at address 0x10ea

[1;32mgef➤  [0md 1

[1;32mgef➤  [0md 1[Krun

Starting program: [32m/home/thestair/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src/a.out[m 1
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".

Breakpoint 2, [34m0x00005555555550ea[m in [33mmain[m ()
[H[J[ Legend: [1m[31mModified register[0m | [31mCode[0m | [32mHeap[0m | [35mStack[0m | [33mString[0m ]
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────── [0m[36mregisters[0m[1;38;5;240m ────[0m
[1m[31m$rax   [0m: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[1m[31m$rbx   [0m: 0x1               
[1m[31m$rcx   [0m: [31m0x0000555555557dc0[0m  →  [31m0x00005555555551d0[0m  →  [1;38;5;240m<__do_global_dtors_aux+0000> endbr64 [0m
[1m[31m$rdx   [0m: [31m0x0000555550555555555107[m <+167>:	[32mpop    [m[31mrbx[m
   [34m0x0000555555555108[m <+168>:	[32mpop    [m[31mrbp[m
   [34m0x0000555555555109[m <+169>:	[32mpop    [m[31mr12[m
   [34m0x000055555555510b[m <+171>:	[32mpop    [m[31mr13[m
   [34m0x000055555555510d[m <+173>:	[32mpop    [m[31mr14[m
   [34m0x000055555555510f[m <+175>:	[32mret[m
   [34m0x0000555555555110[m <+176>:	[32mlea    [m[31mrax[m,[[31mrbx[m+[31mrbx[m*[34m1[m]
   [34m0x0000555555555114[m <+180>:	[32mand    [m[31meax[m,[34m0x2[m
   [34m0x0000555555555117[m <+183>:	[32mmov    [m[31mrax[m,QWORD PTR [[31mrsp[m+[31mrax[m*[34m8[m]
   [34m0x000055555555511b[m <+187>:	[32mjmp    [m[34m0x5555555550e1[m <[33mmain[m+129>
   [34m0x000055555555511d[m <+189>:	[32mxor    [m[31mr12d[m,[31mr12d[m
   [34m0x0000555555555120[m <+192>:	[32mxor    [m[31mr13d[m,[31mr13d[m
   [34m0x0000555555555123[m <+195>:	[32mjmp    [m[34m0x5555555550c8[m <[33mmain[m+104>
   [34m0x0000555555555125[m <+197>:	[32mcall   [m[34m0x555555555050[m <[33m__stack_chk_fail@plt[m>
End of assembler dump.
[1;32mgef➤  [0mbreak *[7m0x00005555555550ea[27m
0x00005555555550ea

Breakpoint 2 at [34m0x5555555550ea[m
Warning:
Cannot insert breakpoint 1.
Cannot access memory at address 0x10ea

[1;32mgef➤  [0md 1

[1;32mgef➤  [0md 1[Krun

Starting program: [32m/home/thestair/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src/a.out[m 1
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".

Breakpoint 2, [34m0x00005555555550ea[m in [33mmain[m ()
[H[J[ Legend: [1m[31mModified register[0m | [31mCode[0m | [32mHeap[0m | [35mStack[0m | [33mString[0m ]
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────── [0m[36mregisters[0m[1;38;5;240m ────[0m
[1m[31m$rax   [0m: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[1m[31m$rbx   [0m: 0x1               
[1m[31m$rcx   [0m: [31m0x0000555555557dc0[0m  →  [31m0x00005555555551d0[0m  →  [1;38;5;240m<__do_global_dtors_aux+0000> endbr64 [0m
[1m[31m$rdx   [0m: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rsp   [0m: [35m0x00007fffffffdbb0[0m  →  [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rbp   [0m: 0x1               
[1m[31m$rsi   [0m: 0x1               
[1m[31m$rdi   [0m: 0x2               
[1m[31m$rip   [0m: [31m0x00005555555550ea[0m  →  [1;38;5;240m<main+008a> call rax[0m
[34m$r8    [0m: 0x0               
[1m[31m$r9    [0m: [31m0x00007ffff7fca380[0m  →  [1;38;5;240m<_dl_fini+0000> endbr64 [0m
[1m[31m$r10   [0m: [35m0x00007fffffffd910[0m  →  0x0000000000800000
[1m[31m$r11   [0m: 0x203             
[1m[31m$r12   [0m: 0x1               
[1m[31m$r13   [0m: 0x2               
[1m[31m$r14   [0m: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[1m[31m$r15   [0m: 0x00007ffff7ffd000  →  0x00007ffff7ffe2e0  →  [31m0x0000555555554000[0m  →  [1;38;5;240m jg 0x555555554047[0m
[34m$eflags[0m: [zero carry parity adjust sign trap [1mINTERRUPT[0m direction overflow resume virtualx86 identification]
[34m$cs[0m: 0x33 [34m$ss[0m: 0x2b [34m$ds[0m: 0x00 [34m$es[0m: 0x00 [34m$fs[0m: 0x00 [34m$gs[0m: 0x00 
;38;5;240m──────────────────────────────────────────────────────────────────────────────────────────── [0m[36mthreads[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] Id 1, Name: "a.out", [1m[31mstopped[0m [34m0x5555555550ea[0m in [1m[33mmain[0m (), reason: [1m[35mBREAKPOINT[0m
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────────── [0m[36mtrace[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] 0x5555555550ea → [32mmain[0m()
[1;38;5;240m─────────────────────────────────────────────────────────────────────────────────────────────────────────[0m

[1;32mgef➤  [0mset a
set args

[1;32mgef➤  [0mrun

Starting program: [32m/home/thestair/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src/a.out[m 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".

Breakpoint 2, [34m0x00005555555550ea[m in [33mmain[m ()
[H[J[ Legend: [1m[31mModified register[0m | [31mCode[0m | [32mHeap[0m | [35mStack[0m | [33mString[0m ]
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────── [0m[36mregisters[0m[1;38;5;240m ────[0m
[1m[31m$rax   [0m: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[1m[31m$rbx   [0m: 0x1               
[1m[31m$rcx   [0m: [31m0x0000555555557dc0[0m  →  [31m0x00005555555551d0[0m  →  [1;38;5;240m<__do_global_dtors_aux+0000> endbr64 [0m
[1m[31m$rdx   [0m: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rsp   [0m: [35m0x00007fffffffdbb0[0m  →  [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rbp   [0m: 0x1               
[1m[31m$rsi   [0m: 0x1               
[1m[31m$rdi   [0m: 0x1               
[1m[31m$rip   [0m: [31m0x00005555555550ea[0m  →  [1;38;5;240m<main+008a> call rax[0m
[34m$r8    [0m: 0x0               
[1m[31m$r9    [0m: [31m0x00007ffff7fca380[0m  →  [1;38;5;240m<_dl_fini+0000> endbr64 [0m
[1m[31m$r10   [0m: [35m0x00007fffffffd910[0m  →  0x0000000000800000
[1m[31m$r11   [0m: 0x203             
[1m[31m$r12   [0m: 0x1               
[1m[31m$r13   [0m: 0x1               
[1m[31m$r14   [0m: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[1m[31m$r15   [0m: 0x00007ffff7ffd000  →  0x00007ffff7ffe2e0  →  [31m0x0000555555554000[0m  →  [1;38;5;240m jg 0x555555554047[0m
[34m$eflags[0m: [zero carry parity adjust sign trap [1mINTERRUPT[0m direction overflow resume virtualx86 identification]
[34m$cs[0m: 0x33 [34m$ss[0m: 0x2b [34m$ds[0m: 0x00 [34m$es[0m: 0x00 [34m$fs[0m: 0x00 [34m$gs[0m: 0x00 
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────────── [0m[36mstack[0m[1;38;5;240m ────[0m
[36m0x00007fffffffdbb0[0m│+0x0000: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m[1m[34m	 ← $rsp[0m
[36m0x00007fffffffdbb8[0m│+0x0008: [31m0x0000555555555230[0m  →  [1;38;5;240m<target2+0000> endbr64 [0m
[36m0x00007fffffffdbc0[0m│+0x0010: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[36m0x00007fffffffdbc8[0m│+0x0018: 0x7740fd6c89c0e700
[36m0x00007fffffffdbd0[0m│+0x0020: [35m0x00007fffffffdd18[0m  →  [35m0x00007fffffffe056[0m  →  [33m"/home/thestair/Documents/suns-dataset/control_flow[...]"[0m
[36m0x00007fffffffdbd8[0m│+0x0028: [35m0x00007fffffffdc90[0m  →  [35m0x00007fffffffdcf0[0m  →  0x0000000000000000
[36m0x00007fffffffdbe0[0m│+0x0030: 0x0000000000000001
[36m0x00007fffffffdbe8[0m│+0x0038: 0x0000000000000000
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────── [0m[36mcode:x86:64[0m[1;38;5;240m ────[0m
   [1;38;5;240m0x5555555550e1 <main+0081>      add    ebx, 0x1[0m
   [1;38;5;240m0x5555555550e4 <main+0084>      mov    esi, r12d[0m
   [1;38;5;240m0x5555555550e7 <main+0087>      mov    edi, r13d[0m
[31m●[0m[32m→ 0x5555555550ea <main+008a>      call   rax[0m
   0x5555555550ec <main+008c>      cmp    ebx, 0x3
   0x5555555550ef <main+008f>      jne    0x5555555550da <main+122>
   0x5555555550f1 <main+0091>      mov    rax, QWORD PTR [rsp+0x18]
   0x5555555550f6 <main+0096>      sub    rax, QWORD PTR fs:0x28
   0x5555555550ff <main+009f>      jne    0x555555555125 <main+197>
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────── [0m[36marguments (guessed)[0m[1;38;5;240m ────[0m
*0x555555555240 (
   [34m$rdi[0m = 0x0000000000000001,
   [34m$rsi[0m = 0x0000000000000001
)
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────────── [0m[36mthreads[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] Id 1, Name: "a.out", [1m[31mstopped[0m [34m0x5555555550ea[0m in [1m[33mmain[0m (), reason: [1m[35mBREAKPOINT[0m
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────────── [0m[36mtrace[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] 0x5555555550ea → [32mmain[0m()
[1;38;5;240m─────────────────────────────────────────────────────────────────────────────────────────────────────────[0m

[1;32mgef➤  [0mset args 1 2

[1;32mgef➤  [0mrun

Starting program: [32m/home/thestair/Documents/suns-dataset/control_flow_recovery/────────────────────────────── [0m[36mcode:x86:64[0m[1;38;5;240m ────[0m
   [1;38;5;240m0x5555555550e1 <main+0081>      add    ebx, 0x1[0m
   [1;38;5;240m0x5555555550e4 <main+0084>      mov    esi, r12d[0m
   [1;38;5;240m0x5555555550e7 <main+0087>      mov    edi, r13d[0m
[31m●[0m[32m→ 0x5555555550ea <main+008a>      call   rax[0m
   0x5555555550ec <main+008c>      cmp    ebx, 0x3
   0x5555555550ef <main+008f>      jne    0x5555555550da <main+122>
   0x5555555550f1 <main+0091>      mov    rax, QWORD PTR [rsp+0x18]
   0x5555555550f6 <main+0096>      sub    rax, QWORD PTR fs:0x28
   0x5555555550ff <main+009f>      jne    0x555555555125 <main+197>
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────── [0m[36marguments (guessed)[0m[1;38;5;240m ────[0m
*0x555555555240 (
   [34m$rdi[0m = 0x0000000000000001,
   [34m$rsi[0m = 0x0000000000000001
)
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────────── [0m[36mthreads[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] Id 1, Name: "a.out", [1m[31mstopped[0m [34m0x5555555550ea[0m in [1m[33mmain[0m (), reason: [1m[35mBREAKPOINT[0m
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────────── [0m[36mtrace[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] 0x5555555550ea → [32mmain[0m()
[1;38;5;240m─────────────────────────────────────────────────────────────────────────────────────────────────────────[0m

[1;32mgef➤  [0mset args 1 2[K2

[1;32mgef➤  [0mrun

Starting program: [32m/home/thestair/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src/a.out[m 1 2
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".

Breakpoint 2, [34m0x00005555555550ea[m in [33mmain[m ()
[H[J[ Legend: [1m[31mModified register[0m | [31mCode[0m | [32mHeap[0m | [35mStack[0m | [33mString[0m ]
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────── [0m[36mregisters[0m[1;38;5;240m ────[0m
[1m[31m$rax   [0m: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rbx   [0m: 0x1               
[1m[31m$rcx   [0m: [31m0x0000555555557dc0[0m  →  [31m0x00005555555551d0[0m  →  [1;38;5;240m<__do_global_dtors_aux+0000> endbr64 [0m
[1m[31m$rdx   [0m: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rsp   [0m: [35m0x00007fffffffdba0[0m  →  [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[34m$rbp   [0m: 0x0               
[1m[36mcode:x86:64[0m[1;38;5;240m ────[0m
   [1;38;5;240m0x5555555550e1 <main+0081>      add    ebx, 0x1[0m
   [1;38;5;240m0x5555555550e4 <main+0084>      mov    esi, r12d[0m
   [1;38;5;240m0x5555555550e7 <main+0087>      mov    edi, r13d[0m
[31m●[0m[32m→ 0x5555555550ea <main+008a>      call   rax[0m
   0x5555555550ec <main+008c>      cmp    ebx, 0x3
   0x5555555550ef <main+008f>      jne    0x5555555550da <main+122>
   0x5555555550f1 <main+0091>      mov    rax, QWORD PTR [rsp+0x18]
   0x5555555550f6 <main+0096>      sub    rax, QWORD PTR fs:0x28
   0x5555555550ff <main+009f>      jne    0x555555555125 <main+197>
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────── [0m[36marguments (guessed)[0m[1;38;5;240m ────[0m
*0x555555555220 (
   [34m$rdi[0m = 0x0000000000000002,
   [34m$rsi[0m = 0x0000000000000002
)
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────────── [0m[36mthreads[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] Id 1, Name: "a.out", [1m[31mstopped[0m [34m0x5555555550ea[0m in [1m[33mmain[0m (), reason: [1m[35mBREAKPOINT[0m
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────────── [0m[36mtrace[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] 0x5555555550ea → [32mmain[0m()
[1;38;5;240m─────────────────────────────────────────────────────────────────────────────────────────────────────────[0m

[1;32mgef➤  [0mset args 1 2 3

[1;32mgef➤  [0mrun

Starting program: [32m/home/thestair/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src/a.out[m 1 2 3
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".

Breakpoint 2, [34m0x00005555555550ea[m in [33mmain[m ()
[H[J[ Legend: [1m[31mModified register[0m | [31mCode[0m | [32mHeap[0m | [35mStack[0m | [33mString[0m ]
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────── [0m[36mregisters[0m[1;38;5;240m ────[0m
[1m[31m$rax   [0m: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rbx   [0m: 0x1               
[1m[31m$rcx   [0m: [31m0x0000555555557dc0[0m  →  [31m0x00005555555551d0[0m  →  [1;38;5;240m<__do_global_dtors_aux+0000> endbr64 [0m
[1m[31m$rdx   [0m: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[1m[31m$rsp   [0m: [35m0x00007fffffffdba0[0m  →  [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m
[34m$rbp   [0m: 0x0               
[34m$rsi   [0m: 0x0               
[34m$rdi   [0m: 0x0               
[1m[31m$rip   [0m: [31m0x00005555555550ea[0m  →  [1;38;5;240m<main+008a> call rax[0m
[34m$r8    [0m: 0x0               
[1m[31m$r9    [0m: [31m0x00007ffff7fca380[0m  →  [1;38;5;240m<_dl_fini+0000> endbr64 [0m
[1m[31m$r10   [0m: [35m0x00007fffffffd900[0m  →  0x0000000000800000
[1m[31m$r11   [0m: 0x203             
[34m$r12   [0m: 0x0               
[34m$r13   [0m: 0x0               
[1m[31m$r14   [0m: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[1m[31m$r15   [0m: 0x00007ffff7ffd000  →  0x00007ffff7ffe2e0  →  [31m0x0000555555554000[0m  →  [1;38;5;240m jg 0x555555554047[0m
[34m$eflags[0m: [zero carry parity adjust sign trap [1mINTERRUPT[0m direction overflow resume virtualx86 identification]
[34m$cs[0m: 0x33 [34m$ss[0m: 0x2b [34m$ds[0m: 0x00 [34m$es[0m: 0x00 [34m$fs[0m: 0x00 [34m$gs[0m: 0x00 
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────────── [0m[36mstack[0m[1;38;5;240m ────[0m
[36m0x00007fffffffdba0[0m│+0x0000: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m[1m[34m	 ← $rsp[0m
[36m0x00007fffffffdba8[0m│+0x0008: [31m0x0000555555555230[0m  →  [1;38;5;240m<target2+0000> endbr64 [0m
[36m0x00007fffffffdbb0[0m│+0x0010: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[36m0x00007fffffffdbb8[0m│+0x0018: 0x492201e172089b00
[36m0x00007fffffffdbc0[0m│+0x0020: [35m0x00007fffffffdd08[0m  →  [35m0x00007fffffffe050[0m  →  [33m"/home/thestair/Documents/suns-dataset/control_flow[...]"[0m
[36m0x00007fffffffdbc8[0m│+0x0028: [35m0x00007fffffffdc80[0m  →  [35m0x00007fffffffdce0[0m  →  0x0000000000000000
[36m0x00007fffffffdbd0[0m│+0x0030: 0x0000000000000004
[36m0x00007fffffffdbd8[0m│+0x0038: 0x0000000000000000
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────── [0m[36mcode:x86:64[0m[1;38;5;240m ────[0m
   [1;38;5;240m0x5555555550e1 <main+0081>      add    ebx, 0x1[0m
   [1;38;5;240m0x5555555550e4 <main+0084>      mov    esi, r12d[0m
   [1;38;5;240m0x5555555550e7 <main+0087>      mov    edi, r13d[0m
[31m●[0m[32m→ 0x5555555550ea <main+008a>      call   rax[0m
   0x5555555550ec <main+008c>      cmp    ebx, 0x3
   0x5555555550ef <main+008f>      jne    0x5555555550da <main+122>
   0x5555555550f1 <main+0091>      mov    rax, QWORD PTR [rsp+0x18]
   0x5555555550f6 <main+0096>      sub    rax, QWORD PTR fs:0x28
   0x5555555550ff <main+009f>      jne    0x555555555125 <main+197>
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────── [0m[36marguments (guessed)[0m[1;38;5;240m ────[0m
*0x555555555220 (
   [34m$rdi[0m = 0x0000000000000000,
   [34m$rsi[0m = 0x0000000000000000
)
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────────── [0m[36mthreads[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] Id 1, Name: "a.out", 0000: [31m0x0000555555555220[0m  →  [1;38;5;240m<target1+0000> endbr64 [0m[1m[34m	 ← $rsp[0m
[36m0x00007fffffffdba8[0m│+0x0008: [31m0x0000555555555230[0m  →  [1;38;5;240m<target2+0000> endbr64 [0m
[36m0x00007fffffffdbb0[0m│+0x0010: [31m0x0000555555555240[0m  →  [1;38;5;240m<target3+0000> endbr64 [0m
[36m0x00007fffffffdbb8[0m│+0x0018: 0x492201e172089b00
[36m0x00007fffffffdbc0[0m│+0x0020: [35m0x00007fffffffdd08[0m  →  [35m0x00007fffffffe050[0m  →  [33m"/home/thestair/Documents/suns-dataset/control_flow[...]"[0m
[36m0x00007fffffffdbc8[0m│+0x0028: [35m0x00007fffffffdc80[0m  →  [35m0x00007fffffffdce0[0m  →  0x0000000000000000
[36m0x00007fffffffdbd0[0m│+0x0030: 0x0000000000000004
[36m0x00007fffffffdbd8[0m│+0x0038: 0x0000000000000000
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────── [0m[36mcode:x86:64[0m[1;38;5;240m ────[0m
   [1;38;5;240m0x5555555550e1 <main+0081>      add    ebx, 0x1[0m
   [1;38;5;240m0x5555555550e4 <main+0084>      mov    esi, r12d[0m
   [1;38;5;240m0x5555555550e7 <main+0087>      mov    edi, r13d[0m
[31m●[0m[32m→ 0x5555555550ea <main+008a>      call   rax[0m
   0x5555555550ec <main+008c>      cmp    ebx, 0x3
   0x5555555550ef <main+008f>      jne    0x5555555550da <main+122>
   0x5555555550f1 <main+0091>      mov    rax, QWORD PTR [rsp+0x18]
   0x5555555550f6 <main+0096>      sub    rax, QWORD PTR fs:0x28
   0x5555555550ff <main+009f>      jne    0x555555555125 <main+197>
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────── [0m[36marguments (guessed)[0m[1;38;5;240m ────[0m
*0x555555555220 (
   [34m$rdi[0m = 0x0000000000000000,
   [34m$rsi[0m = 0x0000000000000000
)
[1;38;5;240m──────────────────────────────────────────────────────────────────────────────────────────── [0m[36mthreads[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] Id 1, Name: "a.out", [1m[31mstopped[0m [34m0x5555555550ea[0m in [1m[33mmain[0m (), reason: [1m[35mBREAKPOINT[0m
[1;38;5;240m────────────────────────────────────────────────────────────────────────────────────────────── [0m[36mtrace[0m[1;38;5;240m ────[0m
[[1m[32m#0[0m] 0x5555555550ea → [32mmain[0m()
[1;38;5;240m─────────────────────────────────────────────────────────────────────────────────────────────────────────[0m

[1;32mgef➤  [0mexit

]0;thestair@thestair-VMware-Virtual-Platform: ~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[01;32mthestair@thestair-VMware-Virtual-Platform[00m:[01;34m~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[00m$ exit

exit
Script done.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[01;32mthestair@thestair-VMware-Virtual-Platform[00m:[01;34m~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[00m$ strip a.out
[?2004l
[?2004h]0;thestair@thestair-VMware-Virtual-Platform: ~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[01;32mthestair@thestair-VMware-Virtual-Platform[00m:[01;34m~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[00m$ objdump -D a,[K.out
[?2004l

a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__cxa_finalize@plt-0xceb>
 328:	78 38                	js     362 <__cxa_finalize@plt-0xcde>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	80 00 c0             	addb   $0xc0,(%rax)
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	01 00                	add    %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 85 f1 cd 20 33    	add    %al,0x3320cdf1(%rbp)
 37d:	03 b3 f5 54 7d 2e    	add    0x2e7d54f5(%rbx),%esi
 383:	70 bd                	jo     342 <__cxa_finalize@plt-0xcfe>
 385:	71 38                	jno    3bf <__cxa_finalize@plt-0xc81>
 387:	18 d3                	sbb    %dl,%bl
 389:	b0 b5                	mov    $0xb5,%al
 38b:	ad                   	lods   %ds:(%rsi),%eax

Disassembly of section .note.ABI-tag:

000000000000038c <.note.ABI-tag>:
 38c:	04 00                	add    $0x0,%al
 38e:	00 00                	add    %al,(%rax)
 390:	10 00                	adc    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	01 00                	add    %eax,(%rax)
 396:	00 00                	add    %al,(%rax)
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push %rbp
 39b:	00 00                	add    %al,(%rax)
 39d:	00 00                	add    %al,(%rax)
 39f:	00 03                	add    %al,(%rbx)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	00 02                	add    %al,(%rdx)
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 00                	add    %al,(%rax)
 3a9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    (%rax),%al
 3b2:	00 00                	add    %al,(%rax)
 3b4:	06                   	(bad)
 3b5:	00 00                	add    %al,(%rax)
 3b7:	00 01                	add    %al,(%rcx)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 06                	add    %al,(%rsi)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3c7:	00 06                	add    %al,(%rsi)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 00                	add    %al,(%rax)
 3cd:	00 00                	add    %al,(%rax)
 3cf:	00 d1                	add    %dl,%cl
 3d1:	65 ce                	gs (bad)
 3d3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	12 00                	adc    (%rax),%al
 3f2:	00 00                	add    %al,(%rax)
 3f4:	12 00                	adc    (%rax),%al
	...
 406:	00 00                	add    %al,(%rax)
 408:	5e                   	pop    %rsi
 409:	00 00                	add    %al,(%rax)
 40b:	00 20                	add    %ah,(%rax)
	...
 41d:	00 00                	add    %al,(%rax)
 41f:	00 01                	add    %al,(%rcx)
 421:	00 00                	add    %al,(%rax)
 423:	00 12                	add    %dl,(%rdx)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 7a 00             	add    %bh,0x0(%rdx)
 43a:	00 00                	add    %al,(%rax)
 43c:	20 00                	and    %al,(%rax)
	...
 44e:	00 00                	add    %al,(%rax)
 450:	89 00                	mov    %eax,(%rax)
 452:	00 00                	add    %al,(%rax)
 454:	20 00                	and    %al,(%rax)
	...
 466:	00 00                	add    %al,(%rax)
 468:	24 00                	and    $0x0,%al
 46a:	00 00                	add    %al,(%rax)
 46c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000480 <.dynstr>:
 480:	00 5f 5f             	add    %bl,0x5f(%rdi)
 483:	73 74                	jae    4f9 <__cxa_finalize@plt-0xb47>
 485:	61                   	(bad)
 486:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 489:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 48c:	5f                   	pop    %rdi
 48d:	66 61                	data16 (bad)
 48f:	69 6c 00 5f 5f 6c 69 	imul   $0x62696c5f,0x5f(%rax,%rax,1),%ebp
 496:	62 
 497:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 49a:	74 61                	je     4fd <__cxa_finalize@plt-0xb43>
 49c:	72 74                	jb     512 <__cxa_finalize@plt-0xb2e>
 49e:	5f                   	pop    %rdi
 49f:	6d                   	insl   (%dx),%es:(%rdi)
 4a0:	61                   	(bad)
 4a1:	69 6e 00 5f 5f 63 78 	imul   $0x78635f5f,0x0(%rsi),%ebp
 4a8:	61                   	(bad)
 4a9:	5f                   	pop    %rdi
 4aa:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4b0:	7a 65                	jp     517 <__cxa_finalize@plt-0xb29>
 4b2:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4b6:	63 2e                	movsxd (%rsi),%ebp
 4b8:	73 6f                	jae    529 <__cxa_finalize@plt-0xb17>
 4ba:	2e 36 00 47 4c       	cs ss add %al,0x4c(%rdi)
 4bf:	49                   	rex.WB
 4c0:	42                   	rex.X
 4c1:	43 5f                	rex.XB pop %r15
 4c3:	32 2e                	xor    (%rsi),%ch
 4c5:	32 2e                	xor    (%rsi),%ch
 4c7:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 4cc:	42                   	rex.X
 4cd:	43 5f                	rex.XB pop %r15
 4cf:	32 2e                	xor    (%rsi),%ch
 4d1:	34 00                	xor    $0x0,%al
 4d3:	47                   	rex.RXB
 4d4:	4c                   	rex.WR
 4d5:	49                   	rex.WB
 4d6:	42                   	rex.X
 4d7:	43 5f                	rex.XB pop %r15
 4d9:	32 2e                	xor    (%rsi),%ch
 4db:	33 34 00             	xor    (%rax,%rax,1),%esi
 4de:	5f                   	pop    %rdi
 4df:	49 54                	rex.WB push %r12
 4e1:	4d 5f                	rex.WRB pop %r15
 4e3:	64 65 72 65          	fs gs jb 54c <__cxa_finalize@plt-0xaf4>
 4e7:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4ee:	4d 
 4ef:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4f1:	6f                   	outsl  %ds:(%rsi),(%dx)
 4f2:	6e                   	outsb  %ds:(%rsi),(%dx)
 4f3:	65 54                	gs push %rsp
 4f5:	61                   	(bad)
 4f6:	62 6c 65             	(bad)
 4f9:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4fc:	67 6d                	insl   (%dx),%es:(%edi)
 4fe:	6f                   	outsl  %ds:(%rsi),(%dx)
 4ff:	6e                   	outsb  %ds:(%rsi),(%dx)
 500:	5f                   	pop    %rdi
 501:	73 74                	jae    577 <__cxa_finalize@plt-0xac9>
 503:	61                   	(bad)
 504:	72 74                	jb     57a <__cxa_finalize@plt-0xac6>
 506:	5f                   	pop    %rdi
 507:	5f                   	pop    %rdi
 508:	00 5f 49             	add    %bl,0x49(%rdi)
 50b:	54                   	push   %rsp
 50c:	4d 5f                	rex.WRB pop %r15
 50e:	72 65                	jb     575 <__cxa_finalize@plt-0xacb>
 510:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 517:	4d 
 518:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 51a:	6f                   	outsl  %ds:(%rsi),(%dx)
 51b:	6e                   	outsb  %ds:(%rsi),(%dx)
 51c:	65 54                	gs push %rsp
 51e:	61                   	(bad)
 51f:	62                   	.byte 0x62
 520:	6c                   	insb   (%dx),%es:(%rdi)
 521:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000524 <.gnu.version>:
 524:	00 00                	add    %al,(%rax)
 526:	02 00                	add    (%rax),%al
 528:	01 00                	add    %eax,(%rax)
 52a:	03 00                	add    (%rax),%eax
 52c:	01 00                	add    %eax,(%rax)
 52e:	01 00                	add    %eax,(%rax)
 530:	04 00                	add    $0x0,%al

Disassembly of section .gnu.version_r:

0000000000000538 <.gnu.version_r>:
 538:	01 00                	add    %eax,(%rax)
 53a:	03 00                	add    (%rax),%eax
 53c:	33 00                	xor    (%rax),%eax
 53e:	00 00                	add    %al,(%rax)
 540:	10 00                	adc    %al,(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	75 1a                	jne    564 <__cxa_finalize@plt-0xadc>
 54a:	69 09 00 00 04 00    	imul   $0x40000,(%rcx),%ecx
 550:	3d 00 00 00 10       	cmp    $0x10000000,%eax
 555:	00 00                	add    %al,(%rax)
 557:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 55a:	69 0d 00 00 03 00 49 	imul   $0x49,0x30000(%rip),%ecx        # 30564 <__stack_chk_fail@plt+0x2f514>
 561:	00 00 00 
 564:	10 00                	adc    %al,(%rax)
 566:	00 00                	add    %al,(%rax)
 568:	b4 91                	mov    $0x91,%ah
 56a:	96                   	xchg   %eax,%esi
 56b:	06                   	(bad)
 56c:	00 00                	add    %al,(%rax)
 56e:	02 00                	add    (%rax),%al
 570:	53                   	push   %rbx
 571:	00 00                	add    %al,(%rax)
 573:	00 00                	add    %al,(%rax)
 575:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000578 <.rela.dyn>:
 578:	b8 3d 00 00 00       	mov    $0x3d,%eax
 57d:	00 00                	add    %al,(%rax)
 57f:	00 08                	add    %cl,(%rax)
 581:	00 00                	add    %al,(%rax)
 583:	00 00                	add    %al,(%rax)
 585:	00 00                	add    %al,(%rax)
 587:	00 10                	add    %dl,(%rax)
 589:	12 00                	adc    (%rax),%al
 58b:	00 00                	add    %al,(%rax)
 58d:	00 00                	add    %al,(%rax)
 58f:	00 c0                	add    %al,%al
 591:	3d 00 00 00 00       	cmp    $0x0,%eax
 596:	00 00                	add    %al,(%rax)
 598:	08 00                	or     %al,(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	d0 11                	rclb   $1,(%rcx)
 5a2:	00 00                	add    %al,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	08 40 00             	or     %al,0x0(%rax)
 5ab:	00 00                	add    %al,(%rax)
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 08                	add    %cl,(%rax)
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 00                	add    %al,(%rax)
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 08                	add    %cl,(%rax)
 5b9:	40 00 00             	rex add %al,(%rax)
 5bc:	00 00                	add    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	d8 3f                	fdivrs (%rdi)
 5c2:	00 00                	add    %al,(%rax)
 5c4:	00 00                	add    %al,(%rax)
 5c6:	00 00                	add    %al,(%rax)
 5c8:	06                   	(bad)
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 01                	add    %al,(%rcx)
	...
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 e0                	add    %ah,%al
 5d9:	3f                   	(bad)
 5da:	00 00                	add    %al,(%rax)
 5dc:	00 00                	add    %al,(%rax)
 5de:	00 00                	add    %al,(%rax)
 5e0:	06                   	(bad)
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 02                	add    %al,(%rdx)
	...
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 e8                	add    %ch,%al
 5f1:	3f                   	(bad)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	06                   	(bad)
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 606:	00 00                	add    %al,(%rax)
 608:	f0 3f                	lock (bad)
 60a:	00 00                	add    %al,(%rax)
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	06                   	(bad)
 611:	00 00                	add    %al,(%rax)
 613:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 619 <__cxa_finalize@plt-0xa27>
 619:	00 00                	add    %al,(%rax)
 61b:	00 00                	add    %al,(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 f8                	add    %bh,%al
 621:	3f                   	(bad)
 622:	00 00                	add    %al,(%rax)
 624:	00 00                	add    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	06                   	(bad)
 629:	00 00                	add    %al,(%rax)
 62b:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .rela.plt:

0000000000000638 <.rela.plt>:
 638:	d0 3f                	sarb   $1,(%rdi)
 63a:	00 00                	add    %al,(%rax)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	07                   	(bad)
 641:	00 00                	add    %al,(%rax)
 643:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000001000 <.init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__stack_chk_fail@plt+0x2f98>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <__cxa_finalize@plt-0x2a>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	push   0x2f9a(%rip)        # 3fc0 <__stack_chk_fail@plt+0x2f70>
    1026:	ff 25 9c 2f 00 00    	jmp    *0x2f9c(%rip)        # 3fc8 <__stack_chk_fail@plt+0x2f78>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <__cxa_finalize@plt-0x20>
    103e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64
    1044:	ff 25 ae 2f 00 00    	jmp    *0x2fae(%rip)        # 3ff8 <__stack_chk_fail@plt+0x2fa8>
    104a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <__stack_chk_fail@plt>:
    1050:	f3 0f 1e fa          	endbr64
    1054:	ff 25 76 2f 00 00    	jmp    *0x2f76(%rip)        # 3fd0 <__stack_chk_fail@plt+0x2f80>
    105a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <.text>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	41 56                	push   %r14
    1066:	48 8d 15 b3 01 00 00 	lea    0x1b3(%rip),%rdx        # 1220 <__stack_chk_fail@plt+0x1d0>
    106d:	83 ef 01             	sub    $0x1,%edi
    1070:	41 55                	push   %r13
    1072:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1077:	41 54                	push   %r12
    1079:	55                   	push   %rbp
    107a:	53                   	push   %rbx
    107b:	48 83 ec 20          	sub    $0x20,%rsp
    107f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1086:	00 00 
    1088:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    108d:	48 8d 05 9c 01 00 00 	lea    0x19c(%rip),%rax        # 1230 <__stack_chk_fail@plt+0x1e0>
    1094:	66 48 0f 6e c8       	movq   %rax,%xmm1
    1099:	48 8d 05 a0 01 00 00 	lea    0x1a0(%rip),%rax        # 1240 <__stack_chk_fail@plt+0x1f0>
    10a0:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    10a4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    10a9:	0f 29 04 24          	movaps %xmm0,(%rsp)
    10ad:	83 ff 02             	cmp    $0x2,%edi
    10b0:	77 6b                	ja     111d <__stack_chk_fail@plt+0xcd>
    10b2:	48 8d 05 5f 0f 00 00 	lea    0xf5f(%rip),%rax        # 2018 <__stack_chk_fail@plt+0xfc8>
    10b9:	44 8b 2c b8          	mov    (%rax,%rdi,4),%r13d
    10bd:	48 8d 05 44 0f 00 00 	lea    0xf44(%rip),%rax        # 2008 <__stack_chk_fail@plt+0xfb8>
    10c4:	44 8b 24 b8          	mov    (%rax,%rdi,4),%r12d
    10c8:	44 89 ed             	mov    %r13d,%ebp
    10cb:	31 db                	xor    %ebx,%ebx
    10cd:	4c 8d 35 6c 01 00 00 	lea    0x16c(%rip),%r14        # 1240 <__stack_chk_fail@plt+0x1f0>
    10d4:	44 09 e5             	or     %r12d,%ebp
    10d7:	83 e5 01             	and    $0x1,%ebp
    10da:	4c 89 f0             	mov    %r14,%rax
    10dd:	85 ed                	test   %ebp,%ebp
    10df:	74 2f                	je     1110 <__stack_chk_fail@plt+0xc0>
    10e1:	83 c3 01             	add    $0x1,%ebx
    10e4:	44 89 e6             	mov    %r12d,%esi
    10e7:	44 89 ef             	mov    %r13d,%edi
    10ea:	ff d0                	call   *%rax
    10ec:	83 fb 03             	cmp    $0x3,%ebx
    10ef:	75 e9                	jne    10da <__stack_chk_fail@plt+0x8a>
    10f1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    10f6:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    10fd:	00 00 
    10ff:	75 24                	jne    1125 <__stack_chk_fail@plt+0xd5>
    1101:	48 83 c4 20          	add    $0x20,%rsp
    1105:	31 c0                	xor    %eax,%eax
    1107:	5b                   	pop    %rbx
    1108:	5d                   	pop    %rbp
    1109:	41 5c                	pop    %r12
    110b:	41 5d                	pop    %r13
    110d:	41 5e                	pop    %r14
    110f:	c3                   	ret
    1110:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
    1114:	83 e0 02             	and    $0x2,%eax
    1117:	48 8b 04 c4          	mov    (%rsp,%rax,8),%rax
    111b:	eb c4                	jmp    10e1 <__stack_chk_fail@plt+0x91>
    111d:	45 31 e4             	xor    %r12d,%r12d
    1120:	45 31 ed             	xor    %r13d,%r13d
    1123:	eb a3                	jmp    10c8 <__stack_chk_fail@plt+0x78>
    1125:	e8 26 ff ff ff       	call   1050 <__stack_chk_fail@plt>
    112a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1130:	f3 0f 1e fa          	endbr64
    1134:	31 ed                	xor    %ebp,%ebp
    1136:	49 89 d1             	mov    %rdx,%r9
    1139:	5e                   	pop    %rsi
    113a:	48 89 e2             	mov    %rsp,%rdx
    113d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1141:	50                   	push   %rax
    1142:	54                   	push   %rsp
    1143:	45 31 c0             	xor    %r8d,%r8d
    1146:	31 c9                	xor    %ecx,%ecx
    1148:	48 8d 3d 11 ff ff ff 	lea    -0xef(%rip),%rdi        # 1060 <__stack_chk_fail@plt+0x10>
    114f:	ff 15 83 2e 00 00    	call   *0x2e83(%rip)        # 3fd8 <__stack_chk_fail@plt+0x2f88>
    1155:	f4                   	hlt
    1156:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    115d:	00 00 00 
    1160:	48 8d 3d a9 2e 00 00 	lea    0x2ea9(%rip),%rdi        # 4010 <__stack_chk_fail@plt+0x2fc0>
    1167:	48 8d 05 a2 2e 00 00 	lea    0x2ea2(%rip),%rax        # 4010 <__stack_chk_fail@plt+0x2fc0>
    116e:	48 39 f8             	cmp    %rdi,%rax
    1171:	74 15                	je     1188 <__stack_chk_fail@plt+0x138>
    1173:	48 8b 05 66 2e 00 00 	mov    0x2e66(%rip),%rax        # 3fe0 <__stack_chk_fail@plt+0x2f90>
    117a:	48 85 c0             	test   %rax,%rax
    117d:	74 09                	je     1188 <__stack_chk_fail@plt+0x138>
    117f:	ff e0                	jmp    *%rax
    1181:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1188:	c3                   	ret
    1189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1190:	48 8d 3d 79 2e 00 00 	lea    0x2e79(%rip),%rdi        # 4010 <__stack_chk_fail@plt+0x2fc0>
    1197:	48 8d 35 72 2e 00 00 	lea    0x2e72(%rip),%rsi        # 4010 <__stack_chk_fail@plt+0x2fc0>
    119e:	48 29 fe             	sub    %rdi,%rsi
    11a1:	48 89 f0             	mov    %rsi,%rax
    11a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11a8:	48 c1 f8 03          	sar    $0x3,%rax
    11ac:	48 01 c6             	add    %rax,%rsi
    11af:	48 d1 fe             	sar    $1,%rsi
    11b2:	74 14                	je     11c8 <__stack_chk_fail@plt+0x178>
    11b4:	48 8b 05 35 2e 00 00 	mov    0x2e35(%rip),%rax        # 3ff0 <__stack_chk_fail@plt+0x2fa0>
    11bb:	48 85 c0             	test   %rax,%rax
    11be:	74 08                	je     11c8 <__stack_chk_fail@plt+0x178>
    11c0:	ff e0                	jmp    *%rax
    11c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11c8:	c3                   	ret
    11c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11d0:	f3 0f 1e fa          	endbr64
    11d4:	80 3d 35 2e 00 00 00 	cmpb   $0x0,0x2e35(%rip)        # 4010 <__stack_chk_fail@plt+0x2fc0>
    11db:	75 2b                	jne    1208 <__stack_chk_fail@plt+0x1b8>
    11dd:	55                   	push   %rbp
    11de:	48 83 3d 12 2e 00 00 	cmpq   $0x0,0x2e12(%rip)        # 3ff8 <__stack_chk_fail@plt+0x2fa8>
    11e5:	00 
    11e6:	48 89 e5             	mov    %rsp,%rbp
    11e9:	74 0c                	je     11f7 <__stack_chk_fail@plt+0x1a7>
    11eb:	48 8b 3d 16 2e 00 00 	mov    0x2e16(%rip),%rdi        # 4008 <__stack_chk_fail@plt+0x2fb8>
    11f2:	e8 49 fe ff ff       	call   1040 <__cxa_finalize@plt>
    11f7:	e8 64 ff ff ff       	call   1160 <__stack_chk_fail@plt+0x110>
    11fc:	c6 05 0d 2e 00 00 01 	movb   $0x1,0x2e0d(%rip)        # 4010 <__stack_chk_fail@plt+0x2fc0>
    1203:	5d                   	pop    %rbp
    1204:	c3                   	ret
    1205:	0f 1f 00             	nopl   (%rax)
    1208:	c3                   	ret
    1209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1210:	f3 0f 1e fa          	endbr64
    1214:	e9 77 ff ff ff       	jmp    1190 <__stack_chk_fail@plt+0x140>
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1220:	f3 0f 1e fa          	endbr64
    1224:	8d 04 37             	lea    (%rdi,%rsi,1),%eax
    1227:	c3                   	ret
    1228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    122f:	00 
    1230:	f3 0f 1e fa          	endbr64
    1234:	89 f8                	mov    %edi,%eax
    1236:	29 f0                	sub    %esi,%eax
    1238:	c3                   	ret
    1239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1240:	f3 0f 1e fa          	endbr64
    1244:	89 f8                	mov    %edi,%eax
    1246:	0f af c6             	imul   %esi,%eax
    1249:	c3                   	ret

Disassembly of section .fini:

000000000000124c <.fini>:
    124c:	f3 0f 1e fa          	endbr64
    1250:	48 83 ec 08          	sub    $0x8,%rsp
    1254:	48 83 c4 08          	add    $0x8,%rsp
    1258:	c3                   	ret

Disassembly of section .rodata:

0000000000002000 <.rodata>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	01 00                	add    %eax,(%rax)
    200a:	00 00                	add    %al,(%rax)
    200c:	01 00                	add    %eax,(%rax)
    200e:	00 00                	add    %al,(%rax)
    2010:	02 00                	add    (%rax),%al
    2012:	00 00                	add    %al,(%rax)
    2014:	00 00                	add    %al,(%rax)
    2016:	00 00                	add    %al,(%rax)
    2018:	01 00                	add    %eax,(%rax)
    201a:	00 00                	add    %al,(%rax)
    201c:	02 00                	add    (%rax),%al
    201e:	00 00                	add    %al,(%rax)
    2020:	02 00                	add    (%rax),%al
	...

Disassembly of section .eh_frame_hdr:

0000000000002024 <.eh_frame_hdr>:
    2024:	01 1b                	add    %ebx,(%rbx)
    2026:	03 3b                	add    (%rbx),%edi
    2028:	48 00 00             	rex.W add %al,(%rax)
    202b:	00 08                	add    %cl,(%rax)
    202d:	00 00                	add    %al,(%rax)
    202f:	00 fc                	add    %bh,%ah
    2031:	ef                   	out    %eax,(%dx)
    2032:	ff                   	(bad)
    2033:	ff                   	(bad)
    2034:	7c 00                	jl     2036 <__stack_chk_fail@plt+0xfe6>
    2036:	00 00                	add    %al,(%rax)
    2038:	1c f0                	sbb    $0xf0,%al
    203a:	ff                   	(bad)
    203b:	ff a4 00 00 00 2c f0 	jmp    *-0xfd40000(%rax,%rax,1)
    2042:	ff                   	(bad)
    2043:	ff                   	(bad)
    2044:	bc 00 00 00 3c       	mov    $0x3c000000,%esp
    2049:	f0 ff                	lock (bad)
    204b:	ff 10                	call   *(%rax)
    204d:	01 00                	add    %eax,(%rax)
    204f:	00 0c f1             	add    %cl,(%rcx,%rsi,8)
    2052:	ff                   	(bad)
    2053:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
    2057:	00 fc                	add    %bh,%ah
    2059:	f1                   	int1
    205a:	ff                   	(bad)
    205b:	ff d4                	call   *%rsp
    205d:	00 00                	add    %al,(%rax)
    205f:	00 0c f2             	add    %cl,(%rdx,%rsi,8)
    2062:	ff                   	(bad)
    2063:	ff                   	ljmp   (bad)
    2064:	e8 00 00 00 1c       	call   1c002069 <__stack_chk_fail@plt+0x1c001019>
    2069:	f2 ff                	repnz (bad)
    206b:	ff                   	(bad)
    206c:	fc                   	cld
    206d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000002070 <.eh_frame>:
    2070:	14 00                	adc    $0x0,%al
    2072:	00 00                	add    %al,(%rax)
    2074:	00 00                	add    %al,(%rax)
    2076:	00 00                	add    %al,(%rax)
    2078:	01 7a 52             	add    %edi,0x52(%rdx)
    207b:	00 01                	add    %al,(%rcx)
    207d:	78 10                	js     208f <__stack_chk_fail@plt+0x103f>
    207f:	01 1b                	add    %ebx,(%rbx)
    2081:	0c 07                	or     $0x7,%al
    2083:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2089:	00 00                	add    %al,(%rax)
    208b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	a0 f0 ff ff 26 00 00 	movabs 0x26fffff0,%al
    2097:	00 00 
    2099:	44 07                	rex.R (bad)
    209b:	10 00                	adc    %al,(%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 24 00             	add    %ah,(%rax,%rax,1)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	34 00                	xor    $0x0,%al
    20a6:	00 00                	add    %al,(%rax)
    20a8:	78 ef                	js     2099 <__stack_chk_fail@plt+0x1049>
    20aa:	ff                   	(bad)
    20ab:	ff 20                	jmp    *(%rax)
    20ad:	00 00                	add    %al,(%rax)
    20af:	00 00                	add    %al,(%rax)
    20b1:	0e                   	(bad)
    20b2:	10 46 0e             	adc    %al,0xe(%rsi)
    20b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b8:	0b 77 08             	or     0x8(%rdi),%esi
    20bb:	80 00 3f             	addb   $0x3f,(%rax)
    20be:	1a 39                	sbb    (%rcx),%bh
    20c0:	2a 33                	sub    (%rbx),%dh
    20c2:	24 22                	and    $0x22,%al
    20c4:	00 00                	add    %al,(%rax)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	14 00                	adc    $0x0,%al
    20ca:	00 00                	add    %al,(%rax)
    20cc:	5c                   	pop    %rsp
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 70 ef             	add    %dh,-0x11(%rax)
    20d2:	ff                   	(bad)
    20d3:	ff 10                	call   *(%rax)
	...
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 14 00             	add    %dl,(%rax,%rax,1)
    20e2:	00 00                	add    %al,(%rax)
    20e4:	74 00                	je     20e6 <__stack_chk_fail@plt+0x1096>
    20e6:	00 00                	add    %al,(%rax)
    20e8:	68 ef ff ff 10       	push   $0x10ffffef
	...
    20f5:	00 00                	add    %al,(%rax)
    20f7:	00 10                	add    %dl,(%rax)
    20f9:	00 00                	add    %al,(%rax)
    20fb:	00 8c 00 00 00 20 f1 	add    %cl,-0xee00000(%rax,%rax,1)
    2102:	ff                   	(bad)
    2103:	ff 08                	decl   (%rax)
    2105:	00 00                	add    %al,(%rax)
    2107:	00 00                	add    %al,(%rax)
    2109:	00 00                	add    %al,(%rax)
    210b:	00 10                	add    %dl,(%rax)
    210d:	00 00                	add    %al,(%rax)
    210f:	00 a0 00 00 00 1c    	add    %ah,0x1c000000(%rax)
    2115:	f1                   	int1
    2116:	ff                   	(bad)
    2117:	ff 09                	decl   (%rcx)
    2119:	00 00                	add    %al,(%rax)
    211b:	00 00                	add    %al,(%rax)
    211d:	00 00                	add    %al,(%rax)
    211f:	00 10                	add    %dl,(%rax)
    2121:	00 00                	add    %al,(%rax)
    2123:	00 b4 00 00 00 18 f1 	add    %dh,-0xee80000(%rax,%rax,1)
    212a:	ff                   	(bad)
    212b:	ff 0a                	decl   (%rdx)
    212d:	00 00                	add    %al,(%rax)
    212f:	00 00                	add    %al,(%rax)
    2131:	00 00                	add    %al,(%rax)
    2133:	00 40 00             	add    %al,0x0(%rax)
    2136:	00 00                	add    %al,(%rax)
    2138:	c8 00 00 00          	enter  $0x0,$0x0
    213c:	24 ef                	and    $0xef,%al
    213e:	ff                   	(bad)
    213f:	ff ca                	dec    %edx
    2141:	00 00                	add    %al,(%rax)
    2143:	00 00                	add    %al,(%rax)
    2145:	46 0e                	rex.RX (bad)
    2147:	10 8e 02 4c 0e 18    	adc    %cl,0x180e4c02(%rsi)
    214d:	8d 03                	lea    (%rbx),%eax
    214f:	47 0e                	rex.RXB (bad)
    2151:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
    2158:	05 41 0e 30 83       	add    $0x83300e41,%eax
    215d:	06                   	(bad)
    215e:	44 0e                	rex.R (bad)
    2160:	50                   	push   %rax
    2161:	02 86 0a 0e 30 43    	add    0x43300e0a(%rsi),%al
    2167:	0e                   	(bad)
    2168:	28 41 0e             	sub    %al,0xe(%rcx)
    216b:	20 42 0e             	and    %al,0xe(%rdx)
    216e:	18 42 0e             	sbb    %al,0xe(%rdx)
    2171:	10 42 0e             	adc    %al,0xe(%rdx)
    2174:	08 41 0b             	or     %al,0xb(%rcx)
    2177:	00 00                	add    %al,(%rax)
    2179:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003db8 <.init_array>:
    3db8:	10 12                	adc    %dl,(%rdx)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003dc0 <.fini_array>:
    3dc0:	d0 11                	rclb   $1,(%rcx)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003dc8 <.dynamic>:
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	33 00                	xor    (%rax),%eax
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	0c 00                	or     $0x0,%al
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	00 10                	add    %dl,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	0d 00 00 00 00       	or     $0x0,%eax
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 4c 12 00          	add    %cl,0x0(%rdx,%rdx,1)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 19                	add    %bl,(%rcx)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 b8 3d 00 00 00    	add    %bh,0x3d(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 1b                	add    %bl,(%rbx)
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 08                	add    %cl,(%rax)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 1a                	add    %bl,(%rdx)
    3e19:	00 00                	add    %al,(%rax)
    3e1b:	00 00                	add    %al,(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 c0                	add    %al,%al
    3e21:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e26:	00 00                	add    %al,(%rax)
    3e28:	1c 00                	sbb    $0x0,%al
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	08 00                	or     %al,(%rax)
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	f5                   	cmc
    3e39:	fe                   	(bad)
    3e3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e4d <__stack_chk_fail@plt+0x2dfd>
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 80 04 00 00 00    	add    %al,0x4(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 06                	add    %al,(%rsi)
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 d8                	add    %bl,%al
    3e61:	03 00                	add    (%rax),%eax
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 0a                	add    %cl,(%rdx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 a3 00 00 00 00    	add    %ah,0x0(%rbx)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 0b                	add    %cl,(%rbx)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 18                	add    %bl,(%rax)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e8d <__stack_chk_fail@plt+0x2e3d>
	...
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 03                	add    %al,(%rbx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 02                	add    %al,(%rdx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	07                   	(bad)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 17                	add    %dl,(%rdi)
    3ec9:	00 00                	add    %al,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 38                	add    %bh,(%rax)
    3ed1:	06                   	(bad)
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	07                   	(bad)
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 78 05             	add    %bh,0x5(%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	08 00                	or     %al,(%rax)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	c0 00 00             	rolb   $0x0,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 09                	add    %cl,(%rcx)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 18                	add    %bl,(%rax)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 1e                	add    %bl,(%r)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 08                	add    %cl,(%rax)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 fb                	add    %bh,%bl
    3f19:	ff                   	(bad)
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 01                	add    %al,(%rcx)
    3f21:	00 00                	add    %al,(%rax)
    3f23:	08 00                	or     %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 fe                	add    %bh,%dh
    3f29:	ff                   	(bad)
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 38                	add    %bh,(%rax)
    3f31:	05 00 00 00 00       	add    $0x0,%eax
    3f36:	00 00                	add    %al,(%rax)
    3f38:	ff                   	(bad)
    3f39:	ff                   	(bad)
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 01                	add    %al,(%rcx)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	00 00                	add    %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 f0                	add    %dh,%al
    3f49:	ff                   	(bad)
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 24 05 00 00 00 00 	add    %ah,0x0(,%rax,1)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	f9                   	stc
    3f59:	ff                   	(bad)
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fb8 <.got>:
    3fb8:	c8 3d 00 00          	enter  $0x3d,$0x0
	...
    3fd0:	30 10                	xor    %dl,(%rax)
	...

Disassembly of section .data:

0000000000004000 <.data>:
	...
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__cxa_finalize@plt-0xfc8>
   a:	74 75                	je     81 <__cxa_finalize@plt-0xfbf>
   c:	20 31                	and    %dh,(%rcx)
   e:	33 2e                	xor    (%rsi),%ebp
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 36 75 62 75    	xor    %ch,0x75627536(%rip)        # 7562754e <__stack_chk_fail@plt+0x756264fe>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__cxa_finalize@plt-0xfb0>
  1b:	32 7e 32             	xor    0x32(%rsi),%bh
  1e:	34 2e                	xor    $0x2e,%al
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	33 2e                	xor    (%rsi),%ebp
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)
[?2004h]0;thestair@thestair-VMware-Virtual-Platform: ~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[01;32mthestair@thestair-VMware-Virtual-Platform[00m:[01;34m~/Documents/suns-dataset/control_flow_recovery/auburn_sok_benchmarks/function_pointers/anonymous_functions/src[00m$ exit
[?2004lexit

Script done on 2025-04-07 21:01:48-05:00 [COMMAND_EXIT_CODE="0"]
